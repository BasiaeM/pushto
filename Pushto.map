Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
                              lcd.o (__divmodhi4)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              Pushto.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              Pushto.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

keypad_A            0x14              Pushto.o
encoder1            0x4               Pushto.o
encoder2            0x4               Pushto.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
LOAD Pushto.o
LOAD lcd.o
LOAD keypad.o
LOAD encoder.o
LOAD pushto_lib.o
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega16a.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5dc
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092      0x10c Pushto.o
                0x0000000000000092                system_init
                0x00000000000000f2                __vector_6
                0x0000000000000106                __vector_1
                0x0000000000000152                __vector_2
 .text          0x000000000000019e      0x1f8 lcd.o
                0x000000000000019e                lcdcmd
                0x00000000000001ec                lcdData
                0x000000000000023a                lcdInit
                0x00000000000002e8                prints
                0x0000000000000300                gotoXy
                0x0000000000000310                integerToLcd
 .text          0x0000000000000396      0x16c keypad.o
                0x0000000000000396                keypad
                0x00000000000003cc                keypad_proc
 .text          0x0000000000000502       0x2e encoder.o
                0x0000000000000502                direction
 .text          0x0000000000000530        0x0 pushto_lib.o
 .text          0x0000000000000530        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000530        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000530        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000530        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000530        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000530                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000530       0x58 Pushto.o
                0x0000000000000530                main
 .text.libgcc.mul
                0x0000000000000588        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000588       0x28 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000000588                __divmodhi4
                0x0000000000000588                _div
 .text.libgcc   0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000005b0       0x28 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000000000005b0                __udivmodhi4
 .text.libgcc   0x00000000000005d8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000005d8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000005d8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000005d8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000005d8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000000000005d8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005d8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x00000000000005d8                exit
                0x00000000000005d8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005d8        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005dc                _etext = .

.data           0x0000000000800060       0x10 load address 0x00000000000005dc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
 .data          0x0000000000800060        0x0 Pushto.o
 .data          0x0000000000800060        0x0 lcd.o
 .data          0x0000000000800060        0x0 keypad.o
 .data          0x0000000000800060        0x0 encoder.o
 .data          0x0000000000800060        0x0 pushto_lib.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800060       0x10 Pushto.o
 *(.gnu.linkonce.d*)
                0x0000000000800070                . = ALIGN (0x2)
                0x0000000000800070                _edata = .
                0x0000000000800070                PROVIDE (__data_end, .)

.bss            0x0000000000800070       0x1c
                0x0000000000800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
 .bss           0x0000000000800070        0x0 Pushto.o
 .bss           0x0000000000800070        0x0 lcd.o
 .bss           0x0000000000800070        0x0 keypad.o
 .bss           0x0000000000800070        0x0 encoder.o
 .bss           0x0000000000800070        0x0 pushto_lib.o
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800070       0x1c Pushto.o
                0x0000000000800070                keypad_A
                0x0000000000800084                encoder1
                0x0000000000800088                encoder2
                0x000000000080008c                PROVIDE (__bss_end, .)
                0x00000000000005dc                __data_load_start = LOADADDR (.data)
                0x00000000000005ec                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080008c        0x0
                0x000000000080008c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080008c                PROVIDE (__noinit_end, .)
                0x000000000080008c                _end = .
                0x000000000080008c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 Pushto.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 lcd.o
 .comment       0x0000000000000011       0x12 keypad.o
 .comment       0x0000000000000011       0x12 encoder.o
 .comment       0x0000000000000011       0x12 pushto_lib.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 Pushto.o
 .debug_aranges
                0x0000000000000028       0x20 lcd.o
 .debug_aranges
                0x0000000000000048       0x20 keypad.o
 .debug_aranges
                0x0000000000000068       0x20 encoder.o
 .debug_aranges
                0x0000000000000088       0x18 pushto_lib.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xc7d
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x352 Pushto.o
 .debug_info    0x0000000000000352      0x560 lcd.o
 .debug_info    0x00000000000008b2      0x20e keypad.o
 .debug_info    0x0000000000000ac0       0xf4 encoder.o
 .debug_info    0x0000000000000bb4       0xc9 pushto_lib.o

.debug_abbrev   0x0000000000000000      0x55d
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x16e Pushto.o
 .debug_abbrev  0x000000000000016e      0x17d lcd.o
 .debug_abbrev  0x00000000000002eb      0x164 keypad.o
 .debug_abbrev  0x000000000000044f       0x98 encoder.o
 .debug_abbrev  0x00000000000004e7       0x76 pushto_lib.o

.debug_line     0x0000000000000000      0x37c
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0xd1 Pushto.o
 .debug_line    0x00000000000000d1      0x14b lcd.o
 .debug_line    0x000000000000021c       0xd3 keypad.o
 .debug_line    0x00000000000002ef       0x67 encoder.o
 .debug_line    0x0000000000000356       0x26 pushto_lib.o

.debug_frame    0x0000000000000000      0x21c
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x118 Pushto.o
 .debug_frame   0x0000000000000118       0xac lcd.o
 .debug_frame   0x00000000000001c4       0x34 keypad.o
 .debug_frame   0x00000000000001f8       0x24 encoder.o

.debug_str      0x0000000000000000      0x257
 *(.debug_str)
 .debug_str     0x0000000000000000      0x195 Pushto.o
                                        0x1ce (size before relaxing)
 .debug_str     0x0000000000000195       0x85 lcd.o
                                        0x1c0 (size before relaxing)
 .debug_str     0x000000000000021a       0x1a keypad.o
                                        0x19e (size before relaxing)
 .debug_str     0x0000000000000234       0x16 encoder.o
                                        0x152 (size before relaxing)
 .debug_str     0x000000000000024a        0xd pushto_lib.o
                                        0x137 (size before relaxing)

.debug_loc      0x0000000000000000      0x4a7
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1c5 Pushto.o
 .debug_loc     0x00000000000001c5      0x251 lcd.o
 .debug_loc     0x0000000000000416       0x69 keypad.o
 .debug_loc     0x000000000000047f       0x28 encoder.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 Pushto.o

.debug_macro
 *(.debug_macro)
OUTPUT(Pushto.elf elf32-avr)
LOAD linker stubs

Tablica wzajemnych odniesień

Symbol                                            Plik
__bad_interrupt                                   /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__bss_end                                         /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
                                                  lcd.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                                                  pushto_lib.o
                                                  encoder.o
                                                  keypad.o
                                                  Pushto.o
__do_copy_data                                    /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                                                  Pushto.o
__heap_end                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__init                                            /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__stack                                           /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
__vector_1                                        Pushto.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_10                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_11                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_12                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_13                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_14                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_15                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_16                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_17                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_18                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_19                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_2                                        Pushto.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_20                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_3                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_4                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_5                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_6                                        Pushto.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_7                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_8                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_9                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vector_default                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
__vectors                                         /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
_div                                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
direction                                         encoder.o
                                                  Pushto.o
encoder1                                          encoder.o
                                                  Pushto.o
encoder2                                          encoder.o
                                                  Pushto.o
exit                                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
gotoXy                                            lcd.o
                                                  Pushto.o
integerToLcd                                      lcd.o
                                                  Pushto.o
keypad                                            keypad.o
                                                  Pushto.o
keypad_A                                          pushto_lib.o
                                                  keypad.o
                                                  Pushto.o
keypad_proc                                       keypad.o
lcdData                                           lcd.o
lcdInit                                           lcd.o
                                                  Pushto.o
lcdcmd                                            lcd.o
main                                              Pushto.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega16a.o
prints                                            lcd.o
                                                  Pushto.o
system_init                                       Pushto.o
