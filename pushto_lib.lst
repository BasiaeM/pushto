   1               		.file	"pushto_lib.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 476F 746F 		.string	"Goto zenit-> C"
  12      207A 656E 
  12      6974 2D3E 
  12      2043 00
  13               	.LC1:
  14 000f 476F 746F 		.string	"Goto polaris-> C"
  14      2070 6F6C 
  14      6172 6973 
  14      2D3E 2043 
  14      00
  15               	.global	__floatsisf
  16               	.global	__addsf3
  17               	.global	__mulsf3
  18               	.global	__divsf3
  19               	.LC2:
  20 0020 476F 746F 		.string	"Goto alkaid -> C"
  20      2061 6C6B 
  20      6169 6420 
  20      2D3E 2043 
  20      00
  21               	.global	__subsf3
  22               	.global	__lesf2
  23               	.global	__fixsfsi
  24               		.text
  25               	.global	kalibracja
  27               	kalibracja:
  28               	.LFB7:
  29               		.file 1 "pushto_lib.c"
   1:pushto_lib.c  **** #include "pushto_lib.h"
   2:pushto_lib.c  **** 
   3:pushto_lib.c  **** 
   4:pushto_lib.c  **** void kalibracja(struct Enc *enk1, struct Enc *enk2, struct Telescope *tel) //enkoder1 - wysokosc, e
   5:pushto_lib.c  **** {
  30               		.loc 1 5 0
  31               		.cfi_startproc
  32               	.LVL0:
  33 0000 4F92      		push r4
  34               	.LCFI0:
  35               		.cfi_def_cfa_offset 3
  36               		.cfi_offset 4, -2
  37 0002 5F92      		push r5
  38               	.LCFI1:
  39               		.cfi_def_cfa_offset 4
  40               		.cfi_offset 5, -3
  41 0004 6F92      		push r6
  42               	.LCFI2:
  43               		.cfi_def_cfa_offset 5
  44               		.cfi_offset 6, -4
  45 0006 7F92      		push r7
  46               	.LCFI3:
  47               		.cfi_def_cfa_offset 6
  48               		.cfi_offset 7, -5
  49 0008 8F92      		push r8
  50               	.LCFI4:
  51               		.cfi_def_cfa_offset 7
  52               		.cfi_offset 8, -6
  53 000a 9F92      		push r9
  54               	.LCFI5:
  55               		.cfi_def_cfa_offset 8
  56               		.cfi_offset 9, -7
  57 000c AF92      		push r10
  58               	.LCFI6:
  59               		.cfi_def_cfa_offset 9
  60               		.cfi_offset 10, -8
  61 000e BF92      		push r11
  62               	.LCFI7:
  63               		.cfi_def_cfa_offset 10
  64               		.cfi_offset 11, -9
  65 0010 CF92      		push r12
  66               	.LCFI8:
  67               		.cfi_def_cfa_offset 11
  68               		.cfi_offset 12, -10
  69 0012 DF92      		push r13
  70               	.LCFI9:
  71               		.cfi_def_cfa_offset 12
  72               		.cfi_offset 13, -11
  73 0014 EF92      		push r14
  74               	.LCFI10:
  75               		.cfi_def_cfa_offset 13
  76               		.cfi_offset 14, -12
  77 0016 FF92      		push r15
  78               	.LCFI11:
  79               		.cfi_def_cfa_offset 14
  80               		.cfi_offset 15, -13
  81 0018 0F93      		push r16
  82               	.LCFI12:
  83               		.cfi_def_cfa_offset 15
  84               		.cfi_offset 16, -14
  85 001a 1F93      		push r17
  86               	.LCFI13:
  87               		.cfi_def_cfa_offset 16
  88               		.cfi_offset 17, -15
  89 001c CF93      		push r28
  90               	.LCFI14:
  91               		.cfi_def_cfa_offset 17
  92               		.cfi_offset 28, -16
  93 001e DF93      		push r29
  94               	.LCFI15:
  95               		.cfi_def_cfa_offset 18
  96               		.cfi_offset 29, -17
  97               	/* prologue: function */
  98               	/* frame size = 0 */
  99               	/* stack size = 16 */
 100               	.L__stack_usage = 16
 101 0020 7C01      		movw r14,r24
 102 0022 8B01      		movw r16,r22
 103 0024 EA01      		movw r28,r20
   6:pushto_lib.c  ****     /*funkcja do kalibracji pushtu, okreslenie polozenia ukladu rownikowego wzgledem ukladu horyzon
   7:pushto_lib.c  **** 
   8:pushto_lib.c  **** 	float halk;	//wysokość alkaida
   9:pushto_lib.c  **** 	float talk; //kąt godzinny
  10:pushto_lib.c  **** 
  11:pushto_lib.c  **** 	gotoXy(0,0);
 104               		.loc 1 11 0
 105 0026 60E0      		ldi r22,0
 106               	.LVL1:
 107 0028 80E0      		ldi r24,0
 108               	.LVL2:
 109 002a 0E94 0000 		call gotoXy
 110               	.LVL3:
  12:pushto_lib.c  **** 	prints("Goto zenit-> C");
 111               		.loc 1 12 0
 112 002e 80E0      		ldi r24,lo8(.LC0)
 113 0030 90E0      		ldi r25,hi8(.LC0)
 114 0032 0E94 0000 		call prints
 115               	.LVL4:
 116               	.L2:
  13:pushto_lib.c  **** 	while(keypad(&keypad_A)!=0b01111011){} //oczekuj na C
 117               		.loc 1 13 0 discriminator 1
 118 0036 80E0      		ldi r24,lo8(keypad_A)
 119 0038 90E0      		ldi r25,hi8(keypad_A)
 120 003a 0E94 0000 		call keypad
 121               	.LVL5:
 122 003e 8B37      		cpi r24,lo8(123)
 123 0040 01F4      		brne .L2
  14:pushto_lib.c  **** 	enk1->count=EN1_RANGE/4; //ustawienie wysokosci zenitu
 124               		.loc 1 14 0
 125 0042 80E7      		ldi r24,lo8(112)
 126 0044 90E0      		ldi r25,0
 127 0046 F701      		movw r30,r14
 128 0048 9383      		std Z+3,r25
 129 004a 8283      		std Z+2,r24
  15:pushto_lib.c  **** 	
  16:pushto_lib.c  **** 	gotoXy(0,0);
 130               		.loc 1 16 0
 131 004c 60E0      		ldi r22,0
 132 004e 80E0      		ldi r24,0
 133 0050 0E94 0000 		call gotoXy
 134               	.LVL6:
  17:pushto_lib.c  **** 	prints("Goto polaris-> C");
 135               		.loc 1 17 0
 136 0054 80E0      		ldi r24,lo8(.LC1)
 137 0056 90E0      		ldi r25,hi8(.LC1)
 138 0058 0E94 0000 		call prints
 139               	.LVL7:
 140               	.L3:
  18:pushto_lib.c  **** 	while(keypad(&keypad_A)!=0b01111011){} //oczekuj na C
 141               		.loc 1 18 0 discriminator 1
 142 005c 80E0      		ldi r24,lo8(keypad_A)
 143 005e 90E0      		ldi r25,hi8(keypad_A)
 144 0060 0E94 0000 		call keypad
 145               	.LVL8:
 146 0064 8B37      		cpi r24,lo8(123)
 147 0066 01F4      		brne .L3
  19:pushto_lib.c  **** 	enk2->count=0; //ustawienie 0 enkodera na azymucie=0
 148               		.loc 1 19 0
 149 0068 F801      		movw r30,r16
 150 006a 1382      		std Z+3,__zero_reg__
 151 006c 1282      		std Z+2,__zero_reg__
  20:pushto_lib.c  **** 	tel->h_pol=(enk1->count*2.0*PI)/EN1_RANGE; //szerokość geograficzna h_pol, rad
 152               		.loc 1 20 0
 153 006e F701      		movw r30,r14
 154 0070 6281      		ldd r22,Z+2
 155 0072 7381      		ldd r23,Z+3
 156 0074 072E      		mov __tmp_reg__,r23
 157 0076 000C      		lsl r0
 158 0078 880B      		sbc r24,r24
 159 007a 990B      		sbc r25,r25
 160 007c 0E94 0000 		call __floatsisf
 161               	.LVL9:
 162 0080 9B01      		movw r18,r22
 163 0082 AC01      		movw r20,r24
 164 0084 0E94 0000 		call __addsf3
 165               	.LVL10:
 166 0088 2BED      		ldi r18,lo8(-37)
 167 008a 3FE0      		ldi r19,lo8(15)
 168 008c 49E4      		ldi r20,lo8(73)
 169 008e 50E4      		ldi r21,lo8(64)
 170 0090 0E94 0000 		call __mulsf3
 171               	.LVL11:
 172 0094 20E0      		ldi r18,0
 173 0096 30E0      		ldi r19,0
 174 0098 41EE      		ldi r20,lo8(-31)
 175 009a 53E4      		ldi r21,lo8(67)
 176 009c 0E94 0000 		call __divsf3
 177               	.LVL12:
 178 00a0 6C8B      		std Y+20,r22
 179 00a2 7D8B      		std Y+21,r23
 180 00a4 8E8B      		std Y+22,r24
 181 00a6 9F8B      		std Y+23,r25
  21:pushto_lib.c  **** 
  22:pushto_lib.c  **** 	gotoXy(0,0);
 182               		.loc 1 22 0
 183 00a8 60E0      		ldi r22,0
 184 00aa 80E0      		ldi r24,0
 185 00ac 0E94 0000 		call gotoXy
 186               	.LVL13:
  23:pushto_lib.c  **** 	prints("Goto alkaid -> C");
 187               		.loc 1 23 0
 188 00b0 80E0      		ldi r24,lo8(.LC2)
 189 00b2 90E0      		ldi r25,hi8(.LC2)
 190 00b4 0E94 0000 		call prints
 191               	.LVL14:
 192               	.L4:
  24:pushto_lib.c  **** 	while(keypad(&keypad_A)!=0b01111011){} //oczekuj na C
 193               		.loc 1 24 0 discriminator 1
 194 00b8 80E0      		ldi r24,lo8(keypad_A)
 195 00ba 90E0      		ldi r25,hi8(keypad_A)
 196 00bc 0E94 0000 		call keypad
 197               	.LVL15:
 198 00c0 8B37      		cpi r24,lo8(123)
 199 00c2 01F4      		brne .L4
 200               	.LVL16:
  25:pushto_lib.c  **** 	
  26:pushto_lib.c  **** 	halk=(((EN1_RANGE/4)-enk1->count)/EN1_RANGE)*2.0*PI; //przeliczenie zmierzonej wysokości na radia
 201               		.loc 1 26 0
 202 00c4 F701      		movw r30,r14
 203 00c6 6281      		ldd r22,Z+2
 204 00c8 7381      		ldd r23,Z+3
 205 00ca 072E      		mov __tmp_reg__,r23
 206 00cc 000C      		lsl r0
 207 00ce 880B      		sbc r24,r24
 208 00d0 990B      		sbc r25,r25
 209 00d2 0E94 0000 		call __floatsisf
 210               	.LVL17:
 211 00d6 9B01      		movw r18,r22
 212 00d8 AC01      		movw r20,r24
 213 00da 60E0      		ldi r22,0
 214 00dc 70E0      		ldi r23,0
 215 00de 81EE      		ldi r24,lo8(-31)
 216 00e0 92E4      		ldi r25,lo8(66)
 217 00e2 0E94 0000 		call __subsf3
 218               	.LVL18:
 219 00e6 20E0      		ldi r18,0
 220 00e8 30E0      		ldi r19,0
 221 00ea 41EE      		ldi r20,lo8(-31)
 222 00ec 53E4      		ldi r21,lo8(67)
 223 00ee 0E94 0000 		call __divsf3
 224               	.LVL19:
 225 00f2 9B01      		movw r18,r22
 226 00f4 AC01      		movw r20,r24
 227 00f6 0E94 0000 		call __addsf3
 228               	.LVL20:
 229 00fa 2BED      		ldi r18,lo8(-37)
 230 00fc 3FE0      		ldi r19,lo8(15)
 231 00fe 49E4      		ldi r20,lo8(73)
 232 0100 50E4      		ldi r21,lo8(64)
 233 0102 0E94 0000 		call __mulsf3
 234               	.LVL21:
  27:pushto_lib.c  **** 	talk= acos(((sin(halk)-sin(tel->h_pol)*sin(dalk))/(cos(dalk)*cos(tel->h_pol))));
 235               		.loc 1 27 0
 236 0106 0E94 0000 		call sin
 237               	.LVL22:
 238 010a 4B01      		movw r8,r22
 239 010c 5C01      		movw r10,r24
 240 010e CC88      		ldd r12,Y+20
 241 0110 DD88      		ldd r13,Y+21
 242 0112 EE88      		ldd r14,Y+22
 243 0114 FF88      		ldd r15,Y+23
 244 0116 C701      		movw r24,r14
 245 0118 B601      		movw r22,r12
 246 011a 0E94 0000 		call sin
 247               	.LVL23:
 248 011e 2B01      		movw r4,r22
 249 0120 3C01      		movw r6,r24
 250 0122 C701      		movw r24,r14
 251 0124 B601      		movw r22,r12
 252 0126 0E94 0000 		call cos
 253               	.LVL24:
 254 012a 6B01      		movw r12,r22
 255 012c 7C01      		movw r14,r24
 256 012e 27E1      		ldi r18,lo8(23)
 257 0130 35E1      		ldi r19,lo8(21)
 258 0132 42E4      		ldi r20,lo8(66)
 259 0134 5FE3      		ldi r21,lo8(63)
 260 0136 C301      		movw r24,r6
 261 0138 B201      		movw r22,r4
 262 013a 0E94 0000 		call __mulsf3
 263               	.LVL25:
 264 013e 9B01      		movw r18,r22
 265 0140 AC01      		movw r20,r24
 266 0142 C501      		movw r24,r10
 267 0144 B401      		movw r22,r8
 268 0146 0E94 0000 		call __subsf3
 269               	.LVL26:
 270 014a 4B01      		movw r8,r22
 271 014c 5C01      		movw r10,r24
 272 014e 2CEE      		ldi r18,lo8(-20)
 273 0150 3FEE      		ldi r19,lo8(-17)
 274 0152 46E2      		ldi r20,lo8(38)
 275 0154 5FE3      		ldi r21,lo8(63)
 276 0156 C701      		movw r24,r14
 277 0158 B601      		movw r22,r12
 278 015a 0E94 0000 		call __mulsf3
 279               	.LVL27:
 280 015e 9B01      		movw r18,r22
 281 0160 AC01      		movw r20,r24
 282 0162 C501      		movw r24,r10
 283 0164 B401      		movw r22,r8
 284 0166 0E94 0000 		call __divsf3
 285               	.LVL28:
 286 016a 0E94 0000 		call acos
 287               	.LVL29:
 288 016e 6B01      		movw r12,r22
 289 0170 7C01      		movw r14,r24
 290               	.LVL30:
  28:pushto_lib.c  **** 	if(enk2->count*2.0*PI/EN2_RANGE<=PI) talk+=PI; //wynikajace z zakresu funkcji asin
 291               		.loc 1 28 0
 292 0172 F801      		movw r30,r16
 293 0174 6281      		ldd r22,Z+2
 294 0176 7381      		ldd r23,Z+3
 295 0178 072E      		mov __tmp_reg__,r23
 296 017a 000C      		lsl r0
 297 017c 880B      		sbc r24,r24
 298 017e 990B      		sbc r25,r25
 299 0180 0E94 0000 		call __floatsisf
 300               	.LVL31:
 301 0184 9B01      		movw r18,r22
 302 0186 AC01      		movw r20,r24
 303 0188 0E94 0000 		call __addsf3
 304               	.LVL32:
 305 018c 2BED      		ldi r18,lo8(-37)
 306 018e 3FE0      		ldi r19,lo8(15)
 307 0190 49E4      		ldi r20,lo8(73)
 308 0192 50E4      		ldi r21,lo8(64)
 309 0194 0E94 0000 		call __mulsf3
 310               	.LVL33:
 311 0198 20E0      		ldi r18,0
 312 019a 30E0      		ldi r19,0
 313 019c 41EE      		ldi r20,lo8(-31)
 314 019e 53E4      		ldi r21,lo8(67)
 315 01a0 0E94 0000 		call __divsf3
 316               	.LVL34:
 317 01a4 2BED      		ldi r18,lo8(-37)
 318 01a6 3FE0      		ldi r19,lo8(15)
 319 01a8 49E4      		ldi r20,lo8(73)
 320 01aa 50E4      		ldi r21,lo8(64)
 321 01ac 0E94 0000 		call __lesf2
 322               	.LVL35:
 323 01b0 1816      		cp __zero_reg__,r24
 324 01b2 04F0      		brlt .L5
 325               		.loc 1 28 0 is_stmt 0 discriminator 1
 326 01b4 2BED      		ldi r18,lo8(-37)
 327 01b6 3FE0      		ldi r19,lo8(15)
 328 01b8 49E4      		ldi r20,lo8(73)
 329 01ba 50E4      		ldi r21,lo8(64)
 330 01bc C701      		movw r24,r14
 331 01be B601      		movw r22,r12
 332 01c0 0E94 0000 		call __addsf3
 333               	.LVL36:
 334 01c4 6B01      		movw r12,r22
 335 01c6 7C01      		movw r14,r24
 336               	.LVL37:
 337               	.L5:
  29:pushto_lib.c  **** 
  30:pushto_lib.c  **** 	//w radianach????????????????????????????????????
  31:pushto_lib.c  **** 	tel->time=talk+ralk; //ustawianie zegara
 338               		.loc 1 31 0 is_stmt 1
 339 01c8 22EC      		ldi r18,lo8(-62)
 340 01ca 3EE5      		ldi r19,lo8(94)
 341 01cc 47E6      		ldi r20,lo8(103)
 342 01ce 50E4      		ldi r21,lo8(64)
 343 01d0 C701      		movw r24,r14
 344 01d2 B601      		movw r22,r12
 345 01d4 0E94 0000 		call __addsf3
 346               	.LVL38:
 347 01d8 0E94 0000 		call __fixsfsi
 348               	.LVL39:
 349 01dc 7983      		std Y+1,r23
 350 01de 6883      		st Y,r22
 351               	/* epilogue start */
  32:pushto_lib.c  **** 	lcd_clr();
  33:pushto_lib.c  **** 
  34:pushto_lib.c  **** }
 352               		.loc 1 34 0
 353 01e0 DF91      		pop r29
 354 01e2 CF91      		pop r28
 355               	.LVL40:
 356 01e4 1F91      		pop r17
 357 01e6 0F91      		pop r16
 358               	.LVL41:
 359 01e8 FF90      		pop r15
 360 01ea EF90      		pop r14
 361               	.LVL42:
 362 01ec DF90      		pop r13
 363 01ee CF90      		pop r12
 364               	.LVL43:
 365 01f0 BF90      		pop r11
 366 01f2 AF90      		pop r10
 367 01f4 9F90      		pop r9
 368 01f6 8F90      		pop r8
 369 01f8 7F90      		pop r7
 370 01fa 6F90      		pop r6
 371 01fc 5F90      		pop r5
 372 01fe 4F90      		pop r4
  32:pushto_lib.c  **** 	lcd_clr();
 373               		.loc 1 32 0
 374 0200 0C94 0000 		jmp lcd_clr
 375               	.LVL44:
 376               		.cfi_endproc
 377               	.LFE7:
 379               		.section	.rodata.str1.1
 380               	.LC3:
 381 0031 706F 6461 		.string	"podaj dekl i RA "
 381      6A20 6465 
 381      6B6C 2069 
 381      2052 4120 
 381      00
 382               	.LC4:
 383 0042 666F 726D 		.string	"format xHyMz ->B"
 383      6174 2078 
 383      4879 4D7A 
 383      202D 3E42 
 383      00
 384               	.LC5:
 385 0053 6F7A 6E61 		.string	"oznaczenia:     "
 385      637A 656E 
 385      6961 3A20 
 385      2020 2020 
 385      00
 386               	.LC6:
 387 0064 4828 2A29 		.string	"H(*) M(#)    ->B"
 387      204D 2823 
 387      2920 2020 
 387      202D 3E42 
 387      00
 388               	.LC7:
 389 0075 706F 6461 		.string	"podaj RA     ->B"
 389      6A20 5241 
 389      2020 2020 
 389      202D 3E42 
 389      00
 390               	.LC8:
 391 0086 2569 4825 		.string	"%iH%iM%i"
 391      694D 2569 
 391      00
 392               	.LC9:
 393 008f 6465 6B6C 		.string	"dekl H to st ->B"
 393      2048 2074 
 393      6F20 7374 
 393      202D 3E42 
 393      00
 394               		.text
 395               	.global	nowy_cel
 397               	nowy_cel:
 398               	.LFB8:
  35:pushto_lib.c  **** 
  36:pushto_lib.c  **** void nowy_cel(struct Key *klaw, struct Telescope *tel)
  37:pushto_lib.c  **** {
 399               		.loc 1 37 0
 400               		.cfi_startproc
 401               	.LVL45:
 402 0204 2F92      		push r2
 403               	.LCFI16:
 404               		.cfi_def_cfa_offset 3
 405               		.cfi_offset 2, -2
 406 0206 3F92      		push r3
 407               	.LCFI17:
 408               		.cfi_def_cfa_offset 4
 409               		.cfi_offset 3, -3
 410 0208 4F92      		push r4
 411               	.LCFI18:
 412               		.cfi_def_cfa_offset 5
 413               		.cfi_offset 4, -4
 414 020a 5F92      		push r5
 415               	.LCFI19:
 416               		.cfi_def_cfa_offset 6
 417               		.cfi_offset 5, -5
 418 020c 6F92      		push r6
 419               	.LCFI20:
 420               		.cfi_def_cfa_offset 7
 421               		.cfi_offset 6, -6
 422 020e 7F92      		push r7
 423               	.LCFI21:
 424               		.cfi_def_cfa_offset 8
 425               		.cfi_offset 7, -7
 426 0210 8F92      		push r8
 427               	.LCFI22:
 428               		.cfi_def_cfa_offset 9
 429               		.cfi_offset 8, -8
 430 0212 9F92      		push r9
 431               	.LCFI23:
 432               		.cfi_def_cfa_offset 10
 433               		.cfi_offset 9, -9
 434 0214 AF92      		push r10
 435               	.LCFI24:
 436               		.cfi_def_cfa_offset 11
 437               		.cfi_offset 10, -10
 438 0216 BF92      		push r11
 439               	.LCFI25:
 440               		.cfi_def_cfa_offset 12
 441               		.cfi_offset 11, -11
 442 0218 CF92      		push r12
 443               	.LCFI26:
 444               		.cfi_def_cfa_offset 13
 445               		.cfi_offset 12, -12
 446 021a DF92      		push r13
 447               	.LCFI27:
 448               		.cfi_def_cfa_offset 14
 449               		.cfi_offset 13, -13
 450 021c EF92      		push r14
 451               	.LCFI28:
 452               		.cfi_def_cfa_offset 15
 453               		.cfi_offset 14, -14
 454 021e FF92      		push r15
 455               	.LCFI29:
 456               		.cfi_def_cfa_offset 16
 457               		.cfi_offset 15, -15
 458 0220 0F93      		push r16
 459               	.LCFI30:
 460               		.cfi_def_cfa_offset 17
 461               		.cfi_offset 16, -16
 462 0222 1F93      		push r17
 463               	.LCFI31:
 464               		.cfi_def_cfa_offset 18
 465               		.cfi_offset 17, -17
 466 0224 CF93      		push r28
 467               	.LCFI32:
 468               		.cfi_def_cfa_offset 19
 469               		.cfi_offset 28, -18
 470 0226 DF93      		push r29
 471               	.LCFI33:
 472               		.cfi_def_cfa_offset 20
 473               		.cfi_offset 29, -19
 474 0228 00D0      		rcall .
 475 022a 00D0      		rcall .
 476 022c 00D0      		rcall .
 477               	.LCFI34:
 478               		.cfi_def_cfa_offset 26
 479 022e CDB7      		in r28,__SP_L__
 480 0230 DEB7      		in r29,__SP_H__
 481               	.LCFI35:
 482               		.cfi_def_cfa_register 28
 483               	/* prologue: function */
 484               	/* frame size = 6 */
 485               	/* stack size = 24 */
 486               	.L__stack_usage = 24
 487 0232 8C01      		movw r16,r24
 488 0234 1B01      		movw r2,r22
  38:pushto_lib.c  ****     /*funkcja obslugujaca wprowadzanie nowego celu, 
  39:pushto_lib.c  ****     zawiera wskazowki dotyczace formatu wprowadzania,
  40:pushto_lib.c  ****     po wprowadzeniu konwertuje znaki z bufora klawiatury na liczby
  41:pushto_lib.c  ****     reprezentujace deklinacje i rektastencje zadana*/
  42:pushto_lib.c  **** 
  43:pushto_lib.c  **** 	int h=0;
 489               		.loc 1 43 0
 490 0236 1E82      		std Y+6,__zero_reg__
 491 0238 1D82      		std Y+5,__zero_reg__
  44:pushto_lib.c  **** 	int m=0;
 492               		.loc 1 44 0
 493 023a 1C82      		std Y+4,__zero_reg__
 494 023c 1B82      		std Y+3,__zero_reg__
  45:pushto_lib.c  **** 	int s=0;
 495               		.loc 1 45 0
 496 023e 1A82      		std Y+2,__zero_reg__
 497 0240 1982      		std Y+1,__zero_reg__
  46:pushto_lib.c  **** 	//testy
  47:pushto_lib.c  **** 	 gotoXy(0,1);
 498               		.loc 1 47 0
 499 0242 61E0      		ldi r22,lo8(1)
 500               	.LVL46:
 501 0244 80E0      		ldi r24,0
 502               	.LVL47:
 503 0246 0E94 0000 		call gotoXy
 504               	.LVL48:
  48:pushto_lib.c  ****     integerToLcd(h);
 505               		.loc 1 48 0
 506 024a 8D81      		ldd r24,Y+5
 507 024c 9E81      		ldd r25,Y+6
 508 024e 0E94 0000 		call integerToLcd
 509               	.LVL49:
  49:pushto_lib.c  ****     gotoXy(6,1);
 510               		.loc 1 49 0
 511 0252 61E0      		ldi r22,lo8(1)
 512 0254 86E0      		ldi r24,lo8(6)
 513 0256 0E94 0000 		call gotoXy
 514               	.LVL50:
  50:pushto_lib.c  ****     integerToLcd(m);
 515               		.loc 1 50 0
 516 025a 8B81      		ldd r24,Y+3
 517 025c 9C81      		ldd r25,Y+4
 518 025e 0E94 0000 		call integerToLcd
 519               	.LVL51:
  51:pushto_lib.c  ****     gotoXy(11,1);
 520               		.loc 1 51 0
 521 0262 61E0      		ldi r22,lo8(1)
 522 0264 8BE0      		ldi r24,lo8(11)
 523 0266 0E94 0000 		call gotoXy
 524               	.LVL52:
  52:pushto_lib.c  ****     integerToLcd(s);
 525               		.loc 1 52 0
 526 026a 8981      		ldd r24,Y+1
 527 026c 9A81      		ldd r25,Y+2
 528 026e 0E94 0000 		call integerToLcd
 529               	.LVL53:
 530               	.L13:
  53:pushto_lib.c  ****     while(keypad(klaw)!=0b01111101){} //oczekuj na B
 531               		.loc 1 53 0 discriminator 1
 532 0272 C801      		movw r24,r16
 533 0274 0E94 0000 		call keypad
 534               	.LVL54:
 535 0278 8D37      		cpi r24,lo8(125)
 536 027a 01F4      		brne .L13
  54:pushto_lib.c  **** 
  55:pushto_lib.c  **** 
  56:pushto_lib.c  **** 	keypad_clr_buf(); //czyszczenie bufora
 537               		.loc 1 56 0
 538 027c 0E94 0000 		call keypad_clr_buf
 539               	.LVL55:
  57:pushto_lib.c  **** 	gotoXy(0,0);
 540               		.loc 1 57 0
 541 0280 60E0      		ldi r22,0
 542 0282 80E0      		ldi r24,0
 543 0284 0E94 0000 		call gotoXy
 544               	.LVL56:
  58:pushto_lib.c  **** 	prints("podaj dekl i RA ");
 545               		.loc 1 58 0
 546 0288 80E0      		ldi r24,lo8(.LC3)
 547 028a 90E0      		ldi r25,hi8(.LC3)
 548 028c 0E94 0000 		call prints
 549               	.LVL57:
  59:pushto_lib.c  **** 	gotoXy(0,1);
 550               		.loc 1 59 0
 551 0290 61E0      		ldi r22,lo8(1)
 552 0292 80E0      		ldi r24,0
 553 0294 0E94 0000 		call gotoXy
 554               	.LVL58:
  60:pushto_lib.c  **** 	prints("format xHyMz ->B");
 555               		.loc 1 60 0
 556 0298 80E0      		ldi r24,lo8(.LC4)
 557 029a 90E0      		ldi r25,hi8(.LC4)
 558 029c 0E94 0000 		call prints
 559               	.LVL59:
 560               	.L14:
  61:pushto_lib.c  **** 	while(keypad(klaw)!=0b01111101){} //oczekuj na B
 561               		.loc 1 61 0 discriminator 1
 562 02a0 C801      		movw r24,r16
 563 02a2 0E94 0000 		call keypad
 564               	.LVL60:
 565 02a6 8D37      		cpi r24,lo8(125)
 566 02a8 01F4      		brne .L14
  62:pushto_lib.c  **** 	gotoXy(0,0);
 567               		.loc 1 62 0
 568 02aa 60E0      		ldi r22,0
 569 02ac 80E0      		ldi r24,0
 570 02ae 0E94 0000 		call gotoXy
 571               	.LVL61:
  63:pushto_lib.c  **** 	prints("oznaczenia:     ");
 572               		.loc 1 63 0
 573 02b2 80E0      		ldi r24,lo8(.LC5)
 574 02b4 90E0      		ldi r25,hi8(.LC5)
 575 02b6 0E94 0000 		call prints
 576               	.LVL62:
  64:pushto_lib.c  **** 	gotoXy(0,1);
 577               		.loc 1 64 0
 578 02ba 61E0      		ldi r22,lo8(1)
 579 02bc 80E0      		ldi r24,0
 580 02be 0E94 0000 		call gotoXy
 581               	.LVL63:
  65:pushto_lib.c  **** 	prints("H(*) M(#)    ->B");
 582               		.loc 1 65 0
 583 02c2 80E0      		ldi r24,lo8(.LC6)
 584 02c4 90E0      		ldi r25,hi8(.LC6)
 585 02c6 0E94 0000 		call prints
 586               	.LVL64:
 587               	.L15:
  66:pushto_lib.c  **** 	while(keypad(klaw)!=0b01111101){} //oczekuj na B
 588               		.loc 1 66 0 discriminator 1
 589 02ca C801      		movw r24,r16
 590 02cc 0E94 0000 		call keypad
 591               	.LVL65:
 592 02d0 8D37      		cpi r24,lo8(125)
 593 02d2 01F4      		brne .L15
  67:pushto_lib.c  **** 	lcd_clr();
 594               		.loc 1 67 0
 595 02d4 0E94 0000 		call lcd_clr
 596               	.LVL66:
  68:pushto_lib.c  **** 
  69:pushto_lib.c  **** 	gotoXy(0,0);
 597               		.loc 1 69 0
 598 02d8 60E0      		ldi r22,0
 599 02da 80E0      		ldi r24,0
 600 02dc 0E94 0000 		call gotoXy
 601               	.LVL67:
  70:pushto_lib.c  ****     prints("podaj RA     ->B");
 602               		.loc 1 70 0
 603 02e0 80E0      		ldi r24,lo8(.LC7)
 604 02e2 90E0      		ldi r25,hi8(.LC7)
 605 02e4 0E94 0000 		call prints
 606               	.LVL68:
 607 02e8 C801      		movw r24,r16
 608 02ea 0296      		adiw r24,2
 609 02ec 7C01      		movw r14,r24
 610               	.L16:
  71:pushto_lib.c  ****     while(keypad(klaw)!=0b01111101) //oczekuj na B
 611               		.loc 1 71 0
 612 02ee C801      		movw r24,r16
 613 02f0 0E94 0000 		call keypad
 614               	.LVL69:
 615 02f4 8D37      		cpi r24,lo8(125)
 616 02f6 01F0      		breq .L26
  72:pushto_lib.c  ****     {
  73:pushto_lib.c  ****     	gotoXy(0,1);
 617               		.loc 1 73 0
 618 02f8 61E0      		ldi r22,lo8(1)
 619 02fa 80E0      		ldi r24,0
 620 02fc 0E94 0000 		call gotoXy
 621               	.LVL70:
  74:pushto_lib.c  ****     	keypad_proc(klaw);
 622               		.loc 1 74 0
 623 0300 C801      		movw r24,r16
 624 0302 0E94 0000 		call keypad_proc
 625               	.LVL71:
  75:pushto_lib.c  ****     	prints(klaw->buf);
 626               		.loc 1 75 0
 627 0306 C701      		movw r24,r14
 628 0308 0E94 0000 		call prints
 629               	.LVL72:
 630 030c 00C0      		rjmp .L16
 631               	.L26:
  76:pushto_lib.c  ****     }
  77:pushto_lib.c  ****     sscanf(klaw->buf,"%iH%iM%i",&h,&m,&s);
 632               		.loc 1 77 0
 633 030e FE01      		movw r30,r28
 634 0310 3196      		adiw r30,1
 635 0312 4F01      		movw r8,r30
 636 0314 FF93      		push r31
 637 0316 EF93      		push r30
 638 0318 5E01      		movw r10,r28
 639 031a F3E0      		ldi r31,3
 640 031c AF0E      		add r10,r31
 641 031e B11C      		adc r11,__zero_reg__
 642 0320 BF92      		push r11
 643 0322 AF92      		push r10
 644 0324 6E01      		movw r12,r28
 645 0326 85E0      		ldi r24,5
 646 0328 C80E      		add r12,r24
 647 032a D11C      		adc r13,__zero_reg__
 648 032c DF92      		push r13
 649 032e CF92      		push r12
 650 0330 80E0      		ldi r24,lo8(.LC8)
 651 0332 90E0      		ldi r25,hi8(.LC8)
 652 0334 9F93      		push r25
 653 0336 8F93      		push r24
 654 0338 FF92      		push r15
 655 033a EF92      		push r14
 656 033c 0E94 0000 		call sscanf
 657               	.LVL73:
  78:pushto_lib.c  ****     //testy
  79:pushto_lib.c  ****     gotoXy(0,1);
 658               		.loc 1 79 0
 659 0340 61E0      		ldi r22,lo8(1)
 660 0342 80E0      		ldi r24,0
 661 0344 0E94 0000 		call gotoXy
 662               	.LVL74:
  80:pushto_lib.c  ****     integerToLcd(h);
 663               		.loc 1 80 0
 664 0348 8D81      		ldd r24,Y+5
 665 034a 9E81      		ldd r25,Y+6
 666 034c 0E94 0000 		call integerToLcd
 667               	.LVL75:
  81:pushto_lib.c  ****     gotoXy(6,1);
 668               		.loc 1 81 0
 669 0350 61E0      		ldi r22,lo8(1)
 670 0352 86E0      		ldi r24,lo8(6)
 671 0354 0E94 0000 		call gotoXy
 672               	.LVL76:
  82:pushto_lib.c  ****     integerToLcd(m);
 673               		.loc 1 82 0
 674 0358 8B81      		ldd r24,Y+3
 675 035a 9C81      		ldd r25,Y+4
 676 035c 0E94 0000 		call integerToLcd
 677               	.LVL77:
  83:pushto_lib.c  ****     gotoXy(11,1);
 678               		.loc 1 83 0
 679 0360 61E0      		ldi r22,lo8(1)
 680 0362 8BE0      		ldi r24,lo8(11)
 681 0364 0E94 0000 		call gotoXy
 682               	.LVL78:
  84:pushto_lib.c  ****     integerToLcd(s);
 683               		.loc 1 84 0
 684 0368 8981      		ldd r24,Y+1
 685 036a 9A81      		ldd r25,Y+2
 686 036c 0E94 0000 		call integerToLcd
 687               	.LVL79:
  85:pushto_lib.c  ****     while(keypad(klaw)!=0b01111101){} //oczekuj na B
 688               		.loc 1 85 0
 689 0370 0FB6      		in __tmp_reg__,__SREG__
 690 0372 F894      		cli
 691 0374 DEBF      		out __SP_H__,r29
 692 0376 0FBE      		out __SREG__,__tmp_reg__
 693 0378 CDBF      		out __SP_L__,r28
 694               	.L18:
 695               		.loc 1 85 0 is_stmt 0 discriminator 1
 696 037a C801      		movw r24,r16
 697 037c 0E94 0000 		call keypad
 698               	.LVL80:
 699 0380 8D37      		cpi r24,lo8(125)
 700 0382 01F4      		brne .L18
  86:pushto_lib.c  ****     tel->re_zad = (15*h+15/60.0*m+15/3600.0*s)*(PI/180.0); //z przeliczeniem na radiany
 701               		.loc 1 86 0 is_stmt 1
 702 0384 8D81      		ldd r24,Y+5
 703 0386 9E81      		ldd r25,Y+6
 704 0388 2FE0      		ldi r18,lo8(15)
 705 038a 289F      		mul r18,r24
 706 038c B001      		movw r22,r0
 707 038e 299F      		mul r18,r25
 708 0390 700D      		add r23,r0
 709 0392 1124      		clr __zero_reg__
 710 0394 072E      		mov __tmp_reg__,r23
 711 0396 000C      		lsl r0
 712 0398 880B      		sbc r24,r24
 713 039a 990B      		sbc r25,r25
 714 039c 0E94 0000 		call __floatsisf
 715               	.LVL81:
 716 03a0 2B01      		movw r4,r22
 717 03a2 3C01      		movw r6,r24
 718 03a4 6B81      		ldd r22,Y+3
 719 03a6 7C81      		ldd r23,Y+4
 720 03a8 072E      		mov __tmp_reg__,r23
 721 03aa 000C      		lsl r0
 722 03ac 880B      		sbc r24,r24
 723 03ae 990B      		sbc r25,r25
 724 03b0 0E94 0000 		call __floatsisf
 725               	.LVL82:
 726 03b4 20E0      		ldi r18,0
 727 03b6 30E0      		ldi r19,0
 728 03b8 40E8      		ldi r20,lo8(-128)
 729 03ba 5EE3      		ldi r21,lo8(62)
 730 03bc 0E94 0000 		call __mulsf3
 731               	.LVL83:
 732 03c0 9B01      		movw r18,r22
 733 03c2 AC01      		movw r20,r24
 734 03c4 C301      		movw r24,r6
 735 03c6 B201      		movw r22,r4
 736 03c8 0E94 0000 		call __addsf3
 737               	.LVL84:
 738 03cc 2B01      		movw r4,r22
 739 03ce 3C01      		movw r6,r24
 740 03d0 6981      		ldd r22,Y+1
 741 03d2 7A81      		ldd r23,Y+2
 742 03d4 072E      		mov __tmp_reg__,r23
 743 03d6 000C      		lsl r0
 744 03d8 880B      		sbc r24,r24
 745 03da 990B      		sbc r25,r25
 746 03dc 0E94 0000 		call __floatsisf
 747               	.LVL85:
 748 03e0 29E8      		ldi r18,lo8(-119)
 749 03e2 38E8      		ldi r19,lo8(-120)
 750 03e4 48E8      		ldi r20,lo8(-120)
 751 03e6 5BE3      		ldi r21,lo8(59)
 752 03e8 0E94 0000 		call __mulsf3
 753               	.LVL86:
 754 03ec 9B01      		movw r18,r22
 755 03ee AC01      		movw r20,r24
 756 03f0 C301      		movw r24,r6
 757 03f2 B201      		movw r22,r4
 758 03f4 0E94 0000 		call __addsf3
 759               	.LVL87:
 760 03f8 25E3      		ldi r18,lo8(53)
 761 03fa 3AEF      		ldi r19,lo8(-6)
 762 03fc 4EE8      		ldi r20,lo8(-114)
 763 03fe 5CE3      		ldi r21,lo8(60)
 764 0400 0E94 0000 		call __mulsf3
 765               	.LVL88:
 766 0404 F101      		movw r30,r2
 767 0406 6087      		std Z+8,r22
 768 0408 7187      		std Z+9,r23
 769 040a 8287      		std Z+10,r24
 770 040c 9387      		std Z+11,r25
  87:pushto_lib.c  **** 
  88:pushto_lib.c  ****     keypad_clr_buf(); // czyszczenie bufora
 771               		.loc 1 88 0
 772 040e 0E94 0000 		call keypad_clr_buf
 773               	.LVL89:
  89:pushto_lib.c  ****     lcd_clr();
 774               		.loc 1 89 0
 775 0412 0E94 0000 		call lcd_clr
 776               	.LVL90:
  90:pushto_lib.c  ****     h=0;m=0;s=0;
 777               		.loc 1 90 0
 778 0416 1E82      		std Y+6,__zero_reg__
 779 0418 1D82      		std Y+5,__zero_reg__
 780 041a 1C82      		std Y+4,__zero_reg__
 781 041c 1B82      		std Y+3,__zero_reg__
 782 041e 1A82      		std Y+2,__zero_reg__
 783 0420 1982      		std Y+1,__zero_reg__
  91:pushto_lib.c  ****     klaw->flags &= ~KB_H;
  92:pushto_lib.c  **** 	klaw->flags &= ~KB_M;
 784               		.loc 1 92 0
 785 0422 F801      		movw r30,r16
 786 0424 8489      		ldd r24,Z+20
 787 0426 837F      		andi r24,lo8(-13)
 788 0428 848B      		std Z+20,r24
  93:pushto_lib.c  **** 	gotoXy(0,0);
 789               		.loc 1 93 0
 790 042a 60E0      		ldi r22,0
 791 042c 80E0      		ldi r24,0
 792 042e 0E94 0000 		call gotoXy
 793               	.LVL91:
  94:pushto_lib.c  ****     prints("dekl H to st ->B");
 794               		.loc 1 94 0
 795 0432 80E0      		ldi r24,lo8(.LC9)
 796 0434 90E0      		ldi r25,hi8(.LC9)
 797               	.L25:
  95:pushto_lib.c  ****     while(keypad(klaw)!=0b01111101) //oczekuj na B
  96:pushto_lib.c  ****     {
  97:pushto_lib.c  ****     	gotoXy(0,1);
  98:pushto_lib.c  ****     	keypad_proc(klaw);
  99:pushto_lib.c  ****     	prints(klaw->buf);
 798               		.loc 1 99 0
 799 0436 0E94 0000 		call prints
 800               	.LVL92:
  95:pushto_lib.c  ****     while(keypad(klaw)!=0b01111101) //oczekuj na B
 801               		.loc 1 95 0
 802 043a C801      		movw r24,r16
 803 043c 0E94 0000 		call keypad
 804               	.LVL93:
 805 0440 8D37      		cpi r24,lo8(125)
 806 0442 01F0      		breq .L27
  97:pushto_lib.c  ****     	keypad_proc(klaw);
 807               		.loc 1 97 0
 808 0444 61E0      		ldi r22,lo8(1)
 809 0446 80E0      		ldi r24,0
 810 0448 0E94 0000 		call gotoXy
 811               	.LVL94:
  98:pushto_lib.c  ****     	prints(klaw->buf);
 812               		.loc 1 98 0
 813 044c C801      		movw r24,r16
 814 044e 0E94 0000 		call keypad_proc
 815               	.LVL95:
 816               		.loc 1 99 0
 817 0452 C701      		movw r24,r14
 818 0454 00C0      		rjmp .L25
 819               	.L27:
 100:pushto_lib.c  ****     }
 101:pushto_lib.c  ****     sscanf(klaw->buf,"%iH%iM%i",&h,&m,&s);
 820               		.loc 1 101 0
 821 0456 9F92      		push r9
 822 0458 8F92      		push r8
 823 045a BF92      		push r11
 824 045c AF92      		push r10
 825 045e DF92      		push r13
 826 0460 CF92      		push r12
 827 0462 80E0      		ldi r24,lo8(.LC8)
 828 0464 90E0      		ldi r25,hi8(.LC8)
 829 0466 9F93      		push r25
 830 0468 8F93      		push r24
 831 046a FF92      		push r15
 832 046c EF92      		push r14
 833 046e 0E94 0000 		call sscanf
 834               	.LVL96:
 102:pushto_lib.c  ****     tel->de_zad = (h+m/60.0+s/3600.0)*(PI/180.0); //w radianach
 835               		.loc 1 102 0
 836 0472 6D81      		ldd r22,Y+5
 837 0474 7E81      		ldd r23,Y+6
 838 0476 072E      		mov __tmp_reg__,r23
 839 0478 000C      		lsl r0
 840 047a 880B      		sbc r24,r24
 841 047c 990B      		sbc r25,r25
 842 047e 0E94 0000 		call __floatsisf
 843               	.LVL97:
 844 0482 6B01      		movw r12,r22
 845 0484 7C01      		movw r14,r24
 846 0486 8B81      		ldd r24,Y+3
 847 0488 9C81      		ldd r25,Y+4
 848 048a BC01      		movw r22,r24
 849 048c 990F      		lsl r25
 850 048e 880B      		sbc r24,r24
 851 0490 990B      		sbc r25,r25
 852 0492 0E94 0000 		call __floatsisf
 853               	.LVL98:
 854 0496 20E0      		ldi r18,0
 855 0498 30E0      		ldi r19,0
 856 049a 40E7      		ldi r20,lo8(112)
 857 049c 52E4      		ldi r21,lo8(66)
 858 049e 0E94 0000 		call __divsf3
 859               	.LVL99:
 860 04a2 9B01      		movw r18,r22
 861 04a4 AC01      		movw r20,r24
 862 04a6 C701      		movw r24,r14
 863 04a8 B601      		movw r22,r12
 864 04aa 0E94 0000 		call __addsf3
 865               	.LVL100:
 866 04ae 6B01      		movw r12,r22
 867 04b0 7C01      		movw r14,r24
 868 04b2 8981      		ldd r24,Y+1
 869 04b4 9A81      		ldd r25,Y+2
 870 04b6 BC01      		movw r22,r24
 871 04b8 990F      		lsl r25
 872 04ba 880B      		sbc r24,r24
 873 04bc 990B      		sbc r25,r25
 874 04be 0E94 0000 		call __floatsisf
 875               	.LVL101:
 876 04c2 20E0      		ldi r18,0
 877 04c4 30E0      		ldi r19,0
 878 04c6 41E6      		ldi r20,lo8(97)
 879 04c8 55E4      		ldi r21,lo8(69)
 880 04ca 0E94 0000 		call __divsf3
 881               	.LVL102:
 882 04ce 9B01      		movw r18,r22
 883 04d0 AC01      		movw r20,r24
 884 04d2 C701      		movw r24,r14
 885 04d4 B601      		movw r22,r12
 886 04d6 0E94 0000 		call __addsf3
 887               	.LVL103:
 888 04da 25E3      		ldi r18,lo8(53)
 889 04dc 3AEF      		ldi r19,lo8(-6)
 890 04de 4EE8      		ldi r20,lo8(-114)
 891 04e0 5CE3      		ldi r21,lo8(60)
 892 04e2 0E94 0000 		call __mulsf3
 893               	.LVL104:
 894 04e6 F101      		movw r30,r2
 895 04e8 6483      		std Z+4,r22
 896 04ea 7583      		std Z+5,r23
 897 04ec 8683      		std Z+6,r24
 898 04ee 9783      		std Z+7,r25
 103:pushto_lib.c  ****  	
 104:pushto_lib.c  ****  	keypad_clr_buf();
 899               		.loc 1 104 0
 900 04f0 0E94 0000 		call keypad_clr_buf
 901               	.LVL105:
 105:pushto_lib.c  ****  	lcd_clr();
 902               		.loc 1 105 0
 903 04f4 0E94 0000 		call lcd_clr
 904               	.LVL106:
 106:pushto_lib.c  **** 	klaw->flags='\0'; //czszczenie flag
 905               		.loc 1 106 0
 906 04f8 F801      		movw r30,r16
 907 04fa 148A      		std Z+20,__zero_reg__
 908 04fc 0FB6      		in __tmp_reg__,__SREG__
 909 04fe F894      		cli
 910 0500 DEBF      		out __SP_H__,r29
 911 0502 0FBE      		out __SREG__,__tmp_reg__
 912 0504 CDBF      		out __SP_L__,r28
 913               	/* epilogue start */
 107:pushto_lib.c  **** }
 914               		.loc 1 107 0
 915 0506 2696      		adiw r28,6
 916 0508 0FB6      		in __tmp_reg__,__SREG__
 917 050a F894      		cli
 918 050c DEBF      		out __SP_H__,r29
 919 050e 0FBE      		out __SREG__,__tmp_reg__
 920 0510 CDBF      		out __SP_L__,r28
 921 0512 DF91      		pop r29
 922 0514 CF91      		pop r28
 923 0516 1F91      		pop r17
 924 0518 0F91      		pop r16
 925               	.LVL107:
 926 051a FF90      		pop r15
 927 051c EF90      		pop r14
 928               	.LVL108:
 929 051e DF90      		pop r13
 930 0520 CF90      		pop r12
 931 0522 BF90      		pop r11
 932 0524 AF90      		pop r10
 933 0526 9F90      		pop r9
 934 0528 8F90      		pop r8
 935 052a 7F90      		pop r7
 936 052c 6F90      		pop r6
 937 052e 5F90      		pop r5
 938 0530 4F90      		pop r4
 939 0532 3F90      		pop r3
 940 0534 2F90      		pop r2
 941               	.LVL109:
 942 0536 0895      		ret
 943               		.cfi_endproc
 944               	.LFE8:
 946               	.global	obliczenie_nastaw
 948               	obliczenie_nastaw:
 949               	.LFB9:
 108:pushto_lib.c  **** 
 109:pushto_lib.c  **** void obliczenie_nastaw(struct Telescope *tel)
 110:pushto_lib.c  **** {
 950               		.loc 1 110 0
 951               		.cfi_startproc
 952               	.LVL110:
 953 0538 4F92      		push r4
 954               	.LCFI36:
 955               		.cfi_def_cfa_offset 3
 956               		.cfi_offset 4, -2
 957 053a 5F92      		push r5
 958               	.LCFI37:
 959               		.cfi_def_cfa_offset 4
 960               		.cfi_offset 5, -3
 961 053c 6F92      		push r6
 962               	.LCFI38:
 963               		.cfi_def_cfa_offset 5
 964               		.cfi_offset 6, -4
 965 053e 7F92      		push r7
 966               	.LCFI39:
 967               		.cfi_def_cfa_offset 6
 968               		.cfi_offset 7, -5
 969 0540 8F92      		push r8
 970               	.LCFI40:
 971               		.cfi_def_cfa_offset 7
 972               		.cfi_offset 8, -6
 973 0542 9F92      		push r9
 974               	.LCFI41:
 975               		.cfi_def_cfa_offset 8
 976               		.cfi_offset 9, -7
 977 0544 AF92      		push r10
 978               	.LCFI42:
 979               		.cfi_def_cfa_offset 9
 980               		.cfi_offset 10, -8
 981 0546 BF92      		push r11
 982               	.LCFI43:
 983               		.cfi_def_cfa_offset 10
 984               		.cfi_offset 11, -9
 985 0548 CF92      		push r12
 986               	.LCFI44:
 987               		.cfi_def_cfa_offset 11
 988               		.cfi_offset 12, -10
 989 054a DF92      		push r13
 990               	.LCFI45:
 991               		.cfi_def_cfa_offset 12
 992               		.cfi_offset 13, -11
 993 054c EF92      		push r14
 994               	.LCFI46:
 995               		.cfi_def_cfa_offset 13
 996               		.cfi_offset 14, -12
 997 054e FF92      		push r15
 998               	.LCFI47:
 999               		.cfi_def_cfa_offset 14
 1000               		.cfi_offset 15, -13
 1001 0550 0F93      		push r16
 1002               	.LCFI48:
 1003               		.cfi_def_cfa_offset 15
 1004               		.cfi_offset 16, -14
 1005 0552 1F93      		push r17
 1006               	.LCFI49:
 1007               		.cfi_def_cfa_offset 16
 1008               		.cfi_offset 17, -15
 1009 0554 CF93      		push r28
 1010               	.LCFI50:
 1011               		.cfi_def_cfa_offset 17
 1012               		.cfi_offset 28, -16
 1013 0556 DF93      		push r29
 1014               	.LCFI51:
 1015               		.cfi_def_cfa_offset 18
 1016               		.cfi_offset 29, -17
 1017 0558 CDB7      		in r28,__SP_L__
 1018 055a DEB7      		in r29,__SP_H__
 1019               	.LCFI52:
 1020               		.cfi_def_cfa_register 28
 1021 055c 6497      		sbiw r28,20
 1022               	.LCFI53:
 1023               		.cfi_def_cfa_offset 38
 1024 055e 0FB6      		in __tmp_reg__,__SREG__
 1025 0560 F894      		cli
 1026 0562 DEBF      		out __SP_H__,r29
 1027 0564 0FBE      		out __SREG__,__tmp_reg__
 1028 0566 CDBF      		out __SP_L__,r28
 1029               	/* prologue: function */
 1030               	/* frame size = 20 */
 1031               	/* stack size = 36 */
 1032               	.L__stack_usage = 36
 1033 0568 8C01      		movw r16,r24
 111:pushto_lib.c  ****     /*funkcja obliczajaca nastawy dla enkoderow na podstawie wprowadzonych(zadanych)
 112:pushto_lib.c  ****      deklinacji(wys_zad) i rektastencji(obr_zad)
 113:pushto_lib.c  ****      oraz czasu ktory minal od momentu kalibracji */
 114:pushto_lib.c  **** 
 115:pushto_lib.c  **** 	float o_time = tel->time-tel->re_zad; //kąt godzinny obiektu
 1034               		.loc 1 115 0
 1035 056a FC01      		movw r30,r24
 1036 056c 6081      		ld r22,Z
 1037 056e 7181      		ldd r23,Z+1
 1038 0570 072E      		mov __tmp_reg__,r23
 1039 0572 000C      		lsl r0
 1040 0574 880B      		sbc r24,r24
 1041 0576 990B      		sbc r25,r25
 1042 0578 0E94 0000 		call __floatsisf
 1043               	.LVL111:
 1044 057c F801      		movw r30,r16
 1045 057e 2085      		ldd r18,Z+8
 1046 0580 3185      		ldd r19,Z+9
 1047 0582 4285      		ldd r20,Z+10
 1048 0584 5385      		ldd r21,Z+11
 1049 0586 0E94 0000 		call __subsf3
 1050               	.LVL112:
 1051 058a 4B01      		movw r8,r22
 1052 058c 5C01      		movw r10,r24
 1053               	.LVL113:
 116:pushto_lib.c  **** 	tel->wys_obl= asin(sin(tel->de_zad)*sin(tel->h_pol)+cos(tel->de_zad)*cos(tel->h_pol)*cos(o_time));
 1054               		.loc 1 116 0
 1055 058e F801      		movw r30,r16
 1056 0590 2481      		ldd r18,Z+4
 1057 0592 3581      		ldd r19,Z+5
 1058 0594 4681      		ldd r20,Z+6
 1059 0596 5781      		ldd r21,Z+7
 1060 0598 CA01      		movw r24,r20
 1061 059a B901      		movw r22,r18
 1062 059c 298B      		std Y+17,r18
 1063 059e 3A8B      		std Y+18,r19
 1064 05a0 4B8B      		std Y+19,r20
 1065 05a2 5C8B      		std Y+20,r21
 1066 05a4 0E94 0000 		call sin
 1067               	.LVL114:
 1068 05a8 2B01      		movw r4,r22
 1069 05aa 3C01      		movw r6,r24
 1070 05ac F801      		movw r30,r16
 1071 05ae C488      		ldd r12,Z+20
 1072 05b0 D588      		ldd r13,Z+21
 1073 05b2 E688      		ldd r14,Z+22
 1074 05b4 F788      		ldd r15,Z+23
 1075 05b6 C701      		movw r24,r14
 1076 05b8 B601      		movw r22,r12
 1077 05ba 0E94 0000 		call sin
 1078               	.LVL115:
 1079 05be 6D83      		std Y+5,r22
 1080 05c0 7E83      		std Y+6,r23
 1081 05c2 8F83      		std Y+7,r24
 1082 05c4 9887      		std Y+8,r25
 1083 05c6 2989      		ldd r18,Y+17
 1084 05c8 3A89      		ldd r19,Y+18
 1085 05ca 4B89      		ldd r20,Y+19
 1086 05cc 5C89      		ldd r21,Y+20
 1087 05ce CA01      		movw r24,r20
 1088 05d0 B901      		movw r22,r18
 1089 05d2 0E94 0000 		call cos
 1090               	.LVL116:
 1091 05d6 6983      		std Y+1,r22
 1092 05d8 7A83      		std Y+2,r23
 1093 05da 8B83      		std Y+3,r24
 1094 05dc 9C83      		std Y+4,r25
 1095 05de C701      		movw r24,r14
 1096 05e0 B601      		movw r22,r12
 1097 05e2 0E94 0000 		call cos
 1098               	.LVL117:
 1099 05e6 6987      		std Y+9,r22
 1100 05e8 7A87      		std Y+10,r23
 1101 05ea 8B87      		std Y+11,r24
 1102 05ec 9C87      		std Y+12,r25
 1103 05ee C501      		movw r24,r10
 1104 05f0 B401      		movw r22,r8
 1105 05f2 0E94 0000 		call cos
 1106               	.LVL118:
 1107 05f6 6D87      		std Y+13,r22
 1108 05f8 7E87      		std Y+14,r23
 1109 05fa 8F87      		std Y+15,r24
 1110 05fc 988B      		std Y+16,r25
 1111 05fe 2D81      		ldd r18,Y+5
 1112 0600 3E81      		ldd r19,Y+6
 1113 0602 4F81      		ldd r20,Y+7
 1114 0604 5885      		ldd r21,Y+8
 1115 0606 C301      		movw r24,r6
 1116 0608 B201      		movw r22,r4
 1117 060a 0E94 0000 		call __mulsf3
 1118               	.LVL119:
 1119 060e 6B01      		movw r12,r22
 1120 0610 7C01      		movw r14,r24
 1121 0612 2985      		ldd r18,Y+9
 1122 0614 3A85      		ldd r19,Y+10
 1123 0616 4B85      		ldd r20,Y+11
 1124 0618 5C85      		ldd r21,Y+12
 1125 061a 6981      		ldd r22,Y+1
 1126 061c 7A81      		ldd r23,Y+2
 1127 061e 8B81      		ldd r24,Y+3
 1128 0620 9C81      		ldd r25,Y+4
 1129 0622 0E94 0000 		call __mulsf3
 1130               	.LVL120:
 1131 0626 2D85      		ldd r18,Y+13
 1132 0628 3E85      		ldd r19,Y+14
 1133 062a 4F85      		ldd r20,Y+15
 1134 062c 5889      		ldd r21,Y+16
 1135 062e 0E94 0000 		call __mulsf3
 1136               	.LVL121:
 1137 0632 9B01      		movw r18,r22
 1138 0634 AC01      		movw r20,r24
 1139 0636 C701      		movw r24,r14
 1140 0638 B601      		movw r22,r12
 1141 063a 0E94 0000 		call __addsf3
 1142               	.LVL122:
 1143 063e 0E94 0000 		call asin
 1144               	.LVL123:
 1145 0642 6B01      		movw r12,r22
 1146 0644 7C01      		movw r14,r24
 1147 0646 F801      		movw r30,r16
 1148 0648 6487      		std Z+12,r22
 1149 064a 7587      		std Z+13,r23
 1150 064c 8687      		std Z+14,r24
 1151 064e 9787      		std Z+15,r25
 117:pushto_lib.c  **** 	tel->obr_obl= atan(cos(tel->de_zad)*sin(o_time)/(-sin(tel->de_zad)*cos(tel->h_pol)+cos(tel->de_zad
 1152               		.loc 1 117 0
 1153 0650 C501      		movw r24,r10
 1154 0652 B401      		movw r22,r8
 1155 0654 0E94 0000 		call sin
 1156               	.LVL124:
 1157 0658 9B01      		movw r18,r22
 1158 065a AC01      		movw r20,r24
 1159 065c 6981      		ldd r22,Y+1
 1160 065e 7A81      		ldd r23,Y+2
 1161 0660 8B81      		ldd r24,Y+3
 1162 0662 9C81      		ldd r25,Y+4
 1163 0664 0E94 0000 		call __mulsf3
 1164               	.LVL125:
 1165 0668 4B01      		movw r8,r22
 1166 066a 5C01      		movw r10,r24
 1167               	.LVL126:
 1168 066c C301      		movw r24,r6
 1169 066e B201      		movw r22,r4
 1170 0670 9058      		subi r25,0x80
 1171 0672 2985      		ldd r18,Y+9
 1172 0674 3A85      		ldd r19,Y+10
 1173 0676 4B85      		ldd r20,Y+11
 1174 0678 5C85      		ldd r21,Y+12
 1175 067a 0E94 0000 		call __mulsf3
 1176               	.LVL127:
 1177 067e 2B01      		movw r4,r22
 1178 0680 3C01      		movw r6,r24
 1179 0682 2D81      		ldd r18,Y+5
 1180 0684 3E81      		ldd r19,Y+6
 1181 0686 4F81      		ldd r20,Y+7
 1182 0688 5885      		ldd r21,Y+8
 1183 068a 6981      		ldd r22,Y+1
 1184 068c 7A81      		ldd r23,Y+2
 1185 068e 8B81      		ldd r24,Y+3
 1186 0690 9C81      		ldd r25,Y+4
 1187 0692 0E94 0000 		call __mulsf3
 1188               	.LVL128:
 1189 0696 2D85      		ldd r18,Y+13
 1190 0698 3E85      		ldd r19,Y+14
 1191 069a 4F85      		ldd r20,Y+15
 1192 069c 5889      		ldd r21,Y+16
 1193 069e 0E94 0000 		call __mulsf3
 1194               	.LVL129:
 1195 06a2 9B01      		movw r18,r22
 1196 06a4 AC01      		movw r20,r24
 1197 06a6 C301      		movw r24,r6
 1198 06a8 B201      		movw r22,r4
 1199 06aa 0E94 0000 		call __addsf3
 1200               	.LVL130:
 1201 06ae 9B01      		movw r18,r22
 1202 06b0 AC01      		movw r20,r24
 1203 06b2 C501      		movw r24,r10
 1204 06b4 B401      		movw r22,r8
 1205 06b6 0E94 0000 		call __divsf3
 1206               	.LVL131:
 1207 06ba 0E94 0000 		call atan
 1208               	.LVL132:
 1209 06be 4B01      		movw r8,r22
 1210 06c0 5C01      		movw r10,r24
 118:pushto_lib.c  **** 		if(tel->obr_obl<=0) tel->obr_obl+=2*PI;
 1211               		.loc 1 118 0
 1212 06c2 20E0      		ldi r18,0
 1213 06c4 30E0      		ldi r19,0
 1214 06c6 A901      		movw r20,r18
 1215 06c8 0E94 0000 		call __lesf2
 1216               	.LVL133:
 1217 06cc 1816      		cp __zero_reg__,r24
 1218 06ce 04F4      		brge .L29
 117:pushto_lib.c  **** 	tel->obr_obl= atan(cos(tel->de_zad)*sin(o_time)/(-sin(tel->de_zad)*cos(tel->h_pol)+cos(tel->de_zad
 1219               		.loc 1 117 0
 1220 06d0 F801      		movw r30,r16
 1221 06d2 808A      		std Z+16,r8
 1222 06d4 918A      		std Z+17,r9
 1223 06d6 A28A      		std Z+18,r10
 1224 06d8 B38A      		std Z+19,r11
 1225 06da 00C0      		rjmp .L30
 1226               	.L29:
 1227               		.loc 1 118 0 discriminator 1
 1228 06dc 2BED      		ldi r18,lo8(-37)
 1229 06de 3FE0      		ldi r19,lo8(15)
 1230 06e0 49EC      		ldi r20,lo8(-55)
 1231 06e2 50E4      		ldi r21,lo8(64)
 1232 06e4 C501      		movw r24,r10
 1233 06e6 B401      		movw r22,r8
 1234 06e8 0E94 0000 		call __addsf3
 1235               	.LVL134:
 1236 06ec F801      		movw r30,r16
 1237 06ee 608B      		std Z+16,r22
 1238 06f0 718B      		std Z+17,r23
 1239 06f2 828B      		std Z+18,r24
 1240 06f4 938B      		std Z+19,r25
 1241               	.L30:
 119:pushto_lib.c  **** 
 120:pushto_lib.c  **** 	tel->wys_obl=(tel->wys_obl*EN1_RANGE)/(2.0*PI); //przeliczenie na obroty
 1242               		.loc 1 120 0
 1243 06f6 20E0      		ldi r18,0
 1244 06f8 30E0      		ldi r19,0
 1245 06fa 41EE      		ldi r20,lo8(-31)
 1246 06fc 53E4      		ldi r21,lo8(67)
 1247 06fe C701      		movw r24,r14
 1248 0700 B601      		movw r22,r12
 1249 0702 0E94 0000 		call __mulsf3
 1250               	.LVL135:
 1251 0706 2BED      		ldi r18,lo8(-37)
 1252 0708 3FE0      		ldi r19,lo8(15)
 1253 070a 49EC      		ldi r20,lo8(-55)
 1254 070c 50E4      		ldi r21,lo8(64)
 1255 070e 0E94 0000 		call __divsf3
 1256               	.LVL136:
 1257 0712 F801      		movw r30,r16
 1258 0714 6487      		std Z+12,r22
 1259 0716 7587      		std Z+13,r23
 1260 0718 8687      		std Z+14,r24
 1261 071a 9787      		std Z+15,r25
 121:pushto_lib.c  **** 	tel->obr_obl=(tel->obr_obl*EN2_RANGE)/(2.0*PI);
 1262               		.loc 1 121 0
 1263 071c 20E0      		ldi r18,0
 1264 071e 30E0      		ldi r19,0
 1265 0720 41EE      		ldi r20,lo8(-31)
 1266 0722 53E4      		ldi r21,lo8(67)
 1267 0724 6089      		ldd r22,Z+16
 1268 0726 7189      		ldd r23,Z+17
 1269 0728 8289      		ldd r24,Z+18
 1270 072a 9389      		ldd r25,Z+19
 1271 072c 0E94 0000 		call __mulsf3
 1272               	.LVL137:
 1273 0730 2BED      		ldi r18,lo8(-37)
 1274 0732 3FE0      		ldi r19,lo8(15)
 1275 0734 49EC      		ldi r20,lo8(-55)
 1276 0736 50E4      		ldi r21,lo8(64)
 1277 0738 0E94 0000 		call __divsf3
 1278               	.LVL138:
 1279 073c F801      		movw r30,r16
 1280 073e 608B      		std Z+16,r22
 1281 0740 718B      		std Z+17,r23
 1282 0742 828B      		std Z+18,r24
 1283 0744 938B      		std Z+19,r25
 1284               	/* epilogue start */
 122:pushto_lib.c  **** }...
 1285               		.loc 1 122 0
 1286 0746 6496      		adiw r28,20
 1287 0748 0FB6      		in __tmp_reg__,__SREG__
 1288 074a F894      		cli
 1289 074c DEBF      		out __SP_H__,r29
 1290 074e 0FBE      		out __SREG__,__tmp_reg__
 1291 0750 CDBF      		out __SP_L__,r28
 1292 0752 DF91      		pop r29
 1293 0754 CF91      		pop r28
 1294 0756 1F91      		pop r17
 1295 0758 0F91      		pop r16
 1296               	.LVL139:
 1297 075a FF90      		pop r15
 1298 075c EF90      		pop r14
 1299 075e DF90      		pop r13
 1300 0760 CF90      		pop r12
 1301 0762 BF90      		pop r11
 1302 0764 AF90      		pop r10
 1303 0766 9F90      		pop r9
 1304 0768 8F90      		pop r8
 1305 076a 7F90      		pop r7
 1306 076c 6F90      		pop r6
 1307 076e 5F90      		pop r5
 1308 0770 4F90      		pop r4
 1309 0772 0895      		ret
 1310               		.cfi_endproc
 1311               	.LFE9:
 1313               		.comm	telescope_A,24,1
 1314               		.comm	encoder2,4,1
 1315               		.comm	encoder1,4,1
 1316               		.comm	keypad_A,21,1
 1317               	.Letext0:
 1318               		.file 2 "keypad.h"
 1319               		.file 3 "encoder.h"
 1320               		.file 4 "pushto_lib.h"
 1321               		.file 5 "lcd.h"
 1322               		.file 6 "/usr/lib/avr/include/math.h"
 1323               		.file 7 "/usr/lib/avr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pushto_lib.c
     /tmp/ccuf3Z6e.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccuf3Z6e.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccuf3Z6e.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccuf3Z6e.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccuf3Z6e.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccuf3Z6e.s:27     .text:0000000000000000 kalibracja
                            *COM*:0000000000000015 keypad_A
     /tmp/ccuf3Z6e.s:397    .text:0000000000000204 nowy_cel
     /tmp/ccuf3Z6e.s:948    .text:0000000000000538 obliczenie_nastaw
                            *COM*:0000000000000018 telescope_A
                            *COM*:0000000000000004 encoder2
                            *COM*:0000000000000004 encoder1

UNDEFINED SYMBOLS
__floatsisf
__addsf3
__mulsf3
__divsf3
__subsf3
__lesf2
__fixsfsi
gotoXy
prints
keypad
sin
cos
acos
lcd_clr
integerToLcd
keypad_clr_buf
keypad_proc
sscanf
asin
atan
__do_copy_data
__do_clear_bss
